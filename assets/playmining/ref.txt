home

loop -i 5000
	wait -text ' stopped' -timeout 400000 -thenClick true -plusY 350
endLoop


loop -i 5000
	wait -text 'Close' -exactly true -timeout 200000 -thenClick true
endLoop

loop -i 5000
	wait -text 'Register your phone number' -exactly true -timeout 200000 -thenClick true
endLoop

loop -i 5000
	wait -text 'cancel' -exactly true -timeout 200000 -thenClick true
endLoop

loop -i 5000
	wait -edittext 'Please enter your e-mail address' -timeout 500000
	sleep -t 5000
	$sleep
	wait -edittext 'Please enter your e-mail address' -timeout 5000 -thenInput '$email'
	$sleep
	wait -text 'Confirm' -exactly true -timeout 5000 -thenClick true
endLoop

define

	$pk = org.bromite.bromite
	
	$sleep = sleep -t "random -from 1000 -to 2000"
	$email = getVar -name email
	$emailPass = getVar -name emailpass
	//$refCode = BX5FD0
	//$refCode = FE2CC7
	$refCode = AF6FN9

	///sim
	//$requestPhone = get -url "http://otpsim.com/api/phones/request?token=270eb8cde9351fc49c47f606dc6ab691&service=63&network=2&exceptPrefix=85" -field "data.session" -var "session"
	//$gen_link_request = replace -text "http://otpsim.com/api/sessions/_id_?token=270eb8cde9351fc49c47f606dc6ab691" -replace "_id_" -to "getVar -name session" -var "get_link_otp"
	//$getOTP_field = get -url "getVar -name get_link_otp" -field "data.messages[0].otp" -var "otp"
	//$getOTP = get -url "getVar -name get_link_otp" -field "data.messages[0].audio_content" -regex "[0-9]{6}" -regexPos 1 -var "otp"
	//$getOTPSms = get -url "getVar -name get_link_otp" -field "data.messages[0].sms_content" -regex "[0-9]{6}" -regexPos 1 -var "otp"
	//$getPhone = get -url "getVar -name get_link_otp" -field data.phone_number -var "phone"
	
	$getPhoneResult = getVar -name "phone"
	$getOTPResult = getVar -name otp
	
	//chothuesimcode
	
	$requestPhone = get -url "https://chothuesimcode.com/api?act=number&apik=645fff3c&appId=1285&carrier=Mobi" -var "response"
	
	$gen_link_request = replace -text "https://chothuesimcode.com/api?act=code&apik=645fff3c&id=_id_" -replace "_id_" -to 'ReadJson -fromVar "response" -field "Result.Id"' -var "get_link_otp"
	$getOTP_field = get -url "getVar -name get_link_otp" -field "Result.Code" -var "otp"
	$getOTP = get -url "getVar -name get_link_otp" -field "Result.SMS" -regex "[0-9]{6}" -regexPos 1 -var "otp"
	$getOTPSms = get -url "getVar -name get_link_otp" -field "Result.SMS" -regex "[0-9]{6}" -regexPos 1 -var "otp"
	$getPhone = ReadJson -fromVar "response" -field "Result.Number" -var "phone"
	

endDefine

sequence

	if -file "/sdcard/AutoTouchPro/data.csv" -else {DownloadFile -url "https://github.com/thanhlongzzz/AutoTouchPro/raw/main/assets/playmining/data_device_1.csv" -to "/sdcard/AutoTouchPro/data.csv"}
	
	loop -inCsvData "/sdcard/AutoTouchPro/data.csv"
		
		if -getVar "status" -equal null -else {loopContinue}
		//if -getVar "status" -equal "" -else {loopContinue}
		
		//if -getVar "status" -equal "success" -then {loopContinue}
		
		//if -getVar "status" -equal "registerFailed" -then {loopContinue}
		
		//if -getVar "status" -equal "otpPhoneFailed" -then {loopContinue}
		
		//if -getVar "status" -equal "registerEmailFailed" -then {loopContinue}
		
		//if -getVar "status" -equal "notReceiveLinkInEmail" -then {loopContinue}
		
		//if -getVar "status" -equal "notInputRefCode" -then {loopContinue}
		
		//if -getVar "status" -equal "notCreateWallet" -then {loopContinue}
		
		//if -getVar "status" -equal "notInputPhone" -then {loopContinue}
		
		
		changeinfo
		//clear data app, yêu cầu root
		clearData -p "$pk"
		
		var -name "clear" -value 'random -text "1"'
		
		
		if -getVar "clear" -equal 1 -then {opennotification}
		if -getVar "clear" -equal 1 -then {$sleep}
		if -getVar "clear" -equal 1 -then {wait -text "Off - Airplane mode"  -timeout 20000 -thenclick true}
		if -getVar "clear" -equal 1 -then {$sleep}
		if -getVar "clear" -equal 1 -then {wait -text "On - Airplane mode" -timeout 20000 -thenclick true}
		if -getVar "clear" -equal 1 -then {$sleep}
		if -getVar "clear" -equal 1 -then {home}
		if -getVar "clear" -equal 1 -then {$sleep}
		
		//opennotification
		//$sleep
		//wait -text "Off - Airplane mode"  -timeout 20000 -thenclick true
		//$sleep
		//wait -text "On - Airplane mode" -timeout 20000 -thenclick true
		//home
		//$sleep
		
		openApp -p "$pk"
		$sleep
		
		wait -text 'More options' -exactly true -timeout 30000 -thenClick true
		
		wait -text 'Settings' -exactly true -timeout 10000 -thenClick true
		$sleep
		swipe -orient up -time 300
		
		wait -text 'User Agent' -exactly true -timeout 10000 -thenClick true
		
		wait -text 'Insert a valid user agent' -exactly true -timeout 10000 -pos 0 -thenClick true
		
		//Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36 Edg/94.0.992.31
		replace -text {Mozilla/5.0 (Linux; Android 7.0; G930V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.134 Mobile Safari/537.36} -replace "7.0" -to 'random -text "7.0,8.0,8.1,9.0,10.0,11.0"' -var "useragent"
		 
		replace -text {getVar -name "useragent"} -replace "G930V" -to 'random -text "LG-LMK610IM,LG-LMK610IM,LG-LMK610IM,LG-LMK315IM,LG-LMK315IM,LG-LMK310IM,LG-LMK920AM,LG-LMF100TMK,LG-LMF100VM1,LG-LMF100EMW,LG-LMK200BMW,LG-LMK200BAW,LG-LMK200EMW,LG-LMK420YMW,LG-LMK420YM,LG-LMX430ZMW,LG-LMX540ZMW,LG-LMK510ZMW,LG-LMK525BMW,LG-LMK420BMW,LG-LMK520BMW,LG-LMQ520N,LG-LMQ310N,LG-LMK420EMW,LG-LMK520EMW,LG-LMG900TM,LG-LMQ730QM0,LG-Velvet,LG-LMF100N,LG-LMQ610ZAW,LG-LMQ610ZM,LG-LMQ610ZA,LG-LMQ610ZMW,LG-LMQ850EA,LG-LMQ850EAW,LG-LMX520BMW,LG-LMX525BAW,LG-LMX525HA,LG-LMX520HM,LG-LMX520EMW,LG-LMX525ZAW,LG-LMX525EAW,LG-LMQ617YB,LG-LMG810EAW,LG-LMX410YC,LG-LMQ710GX,LG-LMX210JM,LG-LMV500EM,LG-LMQ850QM,LG-LMX420HM,LG-LMX420BMW,LG-LMX420EM,LG-LMX420EMW,LG-LMV450PM,LG-LMG820N,LG-V500N,LG-LMV450VMB,LG-LMG820UM1,LG-X401L,LG-X410L,LG-V300K,LG-V300KR,LG-V300S,LG-V300KW,LG-V300K,LG-V300L,LG-V300LW,LG-V300L,LG-K430AR,LG-K350AR,LG-H320AR,LG-M250AR,LG-V300SW,LG-V300S,LG-LMX410EOW,LG-LMX210NMW,LG-X100L,LG-X415K,LG-H870I,LG-H870AR,LG-X415S,LG-LMX210MA,LG-X415L,LG-SP200,LG-JO,LG-V300S,LG-V300L,SM-G998U,SM-G998U,SM-G998U1,SM-G998U1,SM-G998U1,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G996U1,SM-G996U1,SM-T730,SM-T736B,SM-A9200,SM-W2019,SM-G6200,SM-R810,SM-R805U,SM-R815U,SM-R800,SM-R815N,SM-R805N,SM-W2019,SM-A750N,SM-W737,SM-A9200,SM-A920F/DS,SM-J720M,SM-A750GN/DS,SM-J720M/DS,SM-J720F,SM-J720F/DS,SM-A750F/DS,SM-J400M,SM-J400M/DS,SM-J400G,SM-J400G/DS,SM-J400F/DS,SM-J400F/DS,SM-A605FN,SM-J600FN,SM-A6058,SM-A605F/DS,SM-J415FN/DS,SM-J610FN/DS,SM-A600F/DS,SM-A600FN,SM-A750FN,SM-T837A,SM-T835N0,SM-J260M/DS,SM-J260F/DS,SM-G8858,SM-A530D,SM-G885F/DS,SM-J260G/DS,SM-N960F/DS,SM-G960F/DS,SM-G960F/DS,SM-N960J,SM-N960D,SM-N9600,SM-N9600,SM-N960N,SM-N960N,SM-R815F,SM-R805F,SM-N960F,SM-J600F/DS,SM-T830,SM-T835"' -var "useragent"
		
		//LMK610IM,LMK610IM,LMK610IM,LMK315IM,LMK315IM,LMK310IM,LMK920AM,LMF100TMK,LMF100VM1,LMF100EMW,LMK200BMW,LMK200BAW,LMK200EMW,LMK420YMW,LMK420YM,LMX430ZMW,LMX540ZMW,LMK510ZMW,LMK525BMW,LMK420BMW,LMK520BMW,LMQ520N,LMQ310N,LMK420EMW,LMK520EMW,LMG900TM,LMQ730QM0,Velvet,LMF100N,LMQ610ZAW,LMQ610ZM,LMQ610ZA,LMQ610ZMW,LMQ850EA,LMQ850EAW,LMX520BMW,LMX525BAW,LMX525HA,LMX520HM,LMX520EMW,LMX525ZAW,LMX525EAW,LMQ617YB,LMG810EAW,LMX410YC,LMQ710GX,LMX210JM,LMV500EM,LMQ850QM,LMX420HM,LMX420BMW,LMX420EM,LMX420EMW,LMV450PM,LMG820N,V500N,LMV450VMB,LMG820UM1,X401L,X410L,V300K,V300KR,V300S,V300KW,V300K,V300L,V300LW,V300L,K430AR,K350AR,H320AR,M250AR,V300SW,V300S,LMX410EOW,LMX210NMW,X100L,X415K,H870I,H870AR,X415S,LMX210MA,X415L,SP200,JO,V300S,V300L
		//SM-G998U,SM-G998U,SM-G998U1,SM-G998U1,SM-G998U1,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G991U,SM-G991U,SM-G996U,SM-G996U,SM-G996U1,SM-G996U1,SM-T730,SM-T736B,SM-A9200,SM-W2019,SM-G6200,SM-R810,SM-R805U,SM-R815U,SM-R800,SM-R815N,SM-R805N,SM-W2019,SM-A750N,SM-W737,SM-A9200,SM-A920F/DS,SM-J720M,SM-A750GN/DS,SM-J720M/DS,SM-J720F,SM-J720F/DS,SM-A750F/DS,SM-J400M,SM-J400M/DS,SM-J400G,SM-J400G/DS,SM-J400F/DS,SM-J400F/DS,SM-A605FN,SM-J600FN,SM-A6058,SM-A605F/DS,SM-J415FN/DS,SM-J610FN/DS,SM-A600F/DS,SM-A600FN,SM-A750FN,SM-T837A,SM-T835N0,SM-J260M/DS,SM-J260F/DS,SM-G8858,SM-A530D,SM-G885F/DS,SM-J260G/DS,SM-N960F/DS,SM-G960F/DS,SM-G960F/DS,SM-N960J,SM-N960D,SM-N9600,SM-N9600,SM-N960N,SM-N960N,SM-R815F,SM-R805F,SM-N960F,SM-J600F/DS,SM-T830,SM-T835
		
		replace -text {getVar -name "useragent"} -replace "134" -to 'random -text "134,876,261,347,133,231,032,154,622,123,443,634,234,452"' -var "useragent"
		
		
		replace -text {getVar -name "useragent"} -replace "4472" -to 'random -text "4472,4771,4770,4769,4772"' -var "useragent"
		replace -text {getVar -name "useragent"} -replace "91" -to 'random -text "91,92,93,94"' -var "useragent"
		
		wait -text 'Insert a valid user agent' -exactly true -timeout 10000 -pos 0 -thenInput {getVar -name "useragent"}
		
		//$sleep
		back
		//$sleep
		back
		$sleep
		back
		
		OpenDeepLink -p "$pk" -url "https://playmining.com/accounts/signup"
		$sleep
		
		wait -text 'Please enter your e-mail address' -timeout 35000 -thenInput '$email'
		
		swipe -orient up -time 300
		
		sleep -t 10000
		
		swipe -orient up -time 300
		
		var -name "finded" -value "null"
		loop -i 3
			wait -text 'Please enter your e-mail address' -timeout 5000 -thenScrollTo true
			wait -text 'Please enter your e-mail address' -exactly true -timeout 10000 -thenInput '$email' -thenScrollTo true -then 'var -name "finded" -value "true"' -else 'swipe -orient up -time "random -from 250 -to 1500"'
			if -getVar "finded" -equal null -else {break}
		endLoop
		
		//wait -text 'Please enter your e-mail address' -timeout 5000 -thenClick true
		//$sleep
		//back
		$sleep
		wait -text 'Accept the Terms of Service' -exactly true -timeout 10000 -thenClick true
		$sleep
		
		wait -text 'Please enter your e-mail address' -exactly true -timeout 5000 -thenInput '$email'
		
		$sleep
		wait -text 'Accept the Terms of Service' -exactly true -timeout 10000 -thenClick true -plusY "150"
		$sleep
		$sleep
		sleep -t 5000
		var -name "link" -value "null"
		loop -i 7
			readMail -user "$email" -pass "$emailPass" -contain "Sign up to PlayMining" -limit 2 -regex {<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1} -regexPos 1 -groupPos 2 -var "link"
			if -getVar "link" -equal null -then {$sleep} -else {break}
		endLoop
		
		if -getVar "link" -equal null -then {csvDataRow -col "status" -setText "notReceiveLinkInEmail"}
		
		if -getVar "link" -equal null -then {loopContinue}

		$sleep
		replace -text 'getVar -name "link"' -replace '&amp;' -to '&' -var "link"
		
		//wait -text 'MENU' -exactly true -timeout 5000 -thenClick true
		
		//wait -text 'New tab' -exactly true -timeout 5000 -thenClick true
		
		$sleep
		
		wait -edittext '' -pos 0 -timeout 5000 -thenclick true -thenInput 'getVar -name "link"'
		$sleep
		wait -text 'line_1' -thenclick true -timeout 5000
		$sleep
		
		//OpenDeepLink -p "$pk" -url {getVar -name "link"}
		
				
		//wait -edittext 'Please enter your e-mail address' -exactly true -timeout 15000 -thenInput '$email'
		//$sleep
		//wait -text 'Confirm' -exactly true -timeout 5000 -thenClick true
		//$sleep
		
		
		//OpenDeepLink -p "$pk" -url {https://playmining.com/accounts/login}
		
		//var -name "finded" -value "null"
		//loop -i 3
			//wait -text 'Please enter your e-mail address' -exactly true -timeout 10000 -thenInput '$email' -thenScrollTo true -then 'var -name "finded" -value "true"' -else 'swipe -orient up -time "random -from 250 -to 1500"'
			//if -getVar "finded" -equal null -else {break}
		//endLoop
		
		//wait -text 'Please enter your e-mail address' -exactly true -timeout 10000 -thenInput '$email'
		
		//wait -buttontext "Sign in" -exactly true -pos 1 -thenClick true -timeout 10000
	
		//$sleep
		//$sleep
		//sleep -t 10000
		
		//loop -i 7
			//readMail -user "$email" -pass "$emailPass" -contain "Sign in to PlayMining" -limit 2 -regex {<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1} -regexPos 1 -groupPos 2 -var "linklogin"
			//if -getVar "linklogin" -equal null -then {$sleep} -else {break}
		//endLoop
		//$sleep
		//replace -text 'getVar -name "linklogin"' -replace '&amp;' -to '&' -var "linklogin"
		//sleep -t 5000
		
		
		//wait -edittext '' -pos 0 -timeout 5000 -thenclick true -thenInput 'getVar -name "linklogin"'
		
		//wait -text 'line_1' -thenclick true -timeout 5000
		
		$sleep
		$sleep
		
		sleep -t 10000
		
		//wait -text 'MENU' -exactly true -pos 1 -timeout 15000 -thenClick true
		//$sleep
		
		wait -text 'My Page' -exactly true -timeout 10000 -then {csvDataRow -col "status" -setText "registed"}
		
		wait -text 'My Page' -exactly true -timeout 15000 -else {csvDataRow -col "status" -setText "registerFailed"}
		
		
		
		wait -text 'My Page' -exactly true -timeout 3000 -then {sleep -t 5000}
		
		wait -text 'My Page' -exactly true -timeout 3000 -else {click -x 960 -y 300}
		
		
		wait -text 'My Page' -exactly true -timeout 5000 -else {loopContinue}


		wait -text 'My Page' -pos 0 -exactly true -timeout 3000 -thenClick true
		
		wait -text 'My Page' -pos 1 -exactly true -timeout 3000 -thenClick true
		
		
		
		wait -text 'Entry' -exactly true -timeout 10000 -else {csvDataRow -col "status" -setText "registerFailedNotFoundEntry"}
		
		wait -text 'Entry' -exactly true -timeout 5000 -else {click -x 960 -y 300}
		
		wait -text 'Entry' -exactly true -timeout 5000 -else {wait -text 'My Page' -pos 0 -exactly true -timeout 3000 -thenClick true}
		
		wait -text 'Entry' -exactly true -timeout 5000 -else {wait -text 'My Page' -pos 1 -exactly true -timeout 3000 -thenClick true}
		
		
		wait -text 'Entry' -exactly true -timeout 15000 -else {loopContinue}
		
		wait -text 'Entry' -exactly true -timeout 10000 -thenScrollTo true
		wait -text 'Entry' -exactly true -timeout 10000 -thenClick true
		
		
		$sleep
		wait -text 'Please enter the referral code' -exactly true -timeout 15000 -thenScrollTo true -else {swipe -orient up -time 300}

		wait -text 'Please enter the referral code' -exactly true -timeout 10000 -else {csvDataRow -col "status" -setText "notInputRefCode"}
		wait -text 'Please enter the referral code' -exactly true -timeout 10000 -else {loopContinue}
		
		wait -text 'Please enter the referral code' -exactly true -timeout 10000 -thenInput '$refCode'
		
		$sleep
		wait -text 'Confirm' -exactly true -timeout 10000 -thenClick true
		$sleep
		wait -text 'Confirm' -exactly true -pos 1 -timeout 20000 -thenClick true
		$sleep
		$sleep
		swipe -orient up  -time 300
		$sleep
		wait -text 'Registration has been completed' -exactly true -timeout 20000 -then {wait -text 'Create Wallet' -exactly true -timeout 10000 -thenClick true} -else  {}
		
		
		
		wait -text 'Create Wallet' -exactly true -timeout 10000 -thenClick true
		
		wait -text 'Move' -exactly true -timeout 15000 -else {csvDataRow -col "status" -setText "notCreateWallet"}

		wait -text 'Move' -exactly true -timeout 10000 -thenClick true -else {loopContinue}
		
		$sleep
		wait -text 'Please enter your e-mail address.' -exactly true -timeout 20000 -then {sleep -t 5000}
		$sleep
		$sleep
		wait -text 'Please enter your e-mail address.' -exactly true -timeout 5000 -thenInput '$email'
		$sleep
		$sleep
		$sleep
		wait -text 'Please enter your e-mail address.' -exactly true -timeout 5000 -thenClick true
		$sleep
		wait -text 'Please enter your e-mail address.' -exactly true -timeout 5000 -then {back}
		$sleep
		wait -text 'LOG IN' -exactly true -timeout 10000 -thenClick true -else {toast -text "login" -sound true}
		
		sleep -t 10000
		$sleep
		$sleep
		$sleep
		var -name "linkwallet" -value "null"

		loop -i 7
			readMail -user "$email" -pass "$emailPass" -contain "Login to NFT Marketplace by DEP" -limit 3 -regex {<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1} -regexPos 1 -groupPos 2 -var "linkwallet"
			if -getVar "linkwallet" -equal null -then {sleep -t 5000} -else {break}
		endLoop
		
		$sleep
		if -getVar "linkwallet" -equal null -then {wait -text 'Please enter your e-mail address.' -exactly true -timeout 5000 -thenClick true}
		$sleep
		if -getVar "linkwallet" -equal null -then {wait -text 'Please enter your e-mail address.' -exactly true -timeout 5000 -then back}
		if -getVar "linkwallet" -equal null -then {wait -text 'LOG IN' -exactly true -timeout 10000 -thenClick true}
		
		loop -i 5
			if -getVar "linkwallet" -equal null -then {sleep -t 5000} -else {break}
			readMail -user "$email" -pass "$emailPass" -contain "Login to NFT Marketplace by DEP" -limit 3 -regex {<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1} -regexPos 1 -groupPos 2 -var "linkwallet"
		endLoop
		
		if -getVar "linkwallet" -equal null -then {wait -text 'LOG IN' -exactly true -timeout 10000 -thenClick true}
		
		loop -i 5
			if -getVar "linkwallet" -equal null -then {sleep -t 5000} -else {break}
			readMail -user "$email" -pass "$emailPass" -contain "Login to NFT Marketplace by DEP" -limit 3 -regex {<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1} -regexPos 1 -groupPos 2 -var "linkwallet"
		endLoop
		
		if -getVar "linkwallet" -equal null -then {toast -text "not Receive Link Wallet" -sound true}
		if -getVar "linkwallet" -equal null -then {csvDataRow -col "status" -setText "notReceiveLinkInEmailWallet"}
		if -getVar "linkwallet" -equal null -then {loopContinue}

		$sleep
		replace -text 'getVar -name "linkwallet"' -replace '&amp;' -to '&' -var "linkwallet"
		
		
		wait -edittext '' -pos 0 -timeout 5000 -thenclick true -thenInput 'getVar -name "linkwallet"'
		
		wait -text 'line_1' -thenclick true -timeout 5000
		
		$sleep
		$sleep

		//OpenDeepLink -p "$pk" -url {getVar -name "linkwallet"}
		

		if -text 'Phone Number' -timeout 20000 -then {wait -text 'Register as an' -timeout 5000 -thenclick true}
		$sleep
		$sleep
		if -text 'Phone Number' -timeout 100000 -then {$requestPhone} -else {loopContinue}
		$sleep
		$sleep
		$gen_link_request
		$getPhone

		if -getVar "phone" -equal null -then 'sleep -t 15000'
		if -getVar "phone" -equal null -then {$getPhone}
		
		replace -text '+84_number_' -replace '_number_' -to '$getPhoneResult' -var "newPhone"
		wait -text 'Phone Number' -exactly true -timeout 10000 -thenInput 'getVar -name newPhone'
		
		wait -text 'Singapore' -exactly true -timeout 20000 -thenClick true
		loop -i 10
			wait -text 'Vietnam' -exactly true -timeout 1500 -thenClick true -then {break} -else 'swipe -orient up -time 250'
		endLoop
		
		//$sleep
		//wait -text 'Phone Number' -exactly true -timeout 10000 -thenClick true
		//$sleep
		//wait -text 'Phone Number' -exactly true -timeout 10000 -then {back}
		$sleep
		wait -text 'Send' -exactly true -timeout 5000 -thenClick true
		$sleep
		$sleep
		$sleep
		$sleep
		$sleep
		sleep -t 10000
		$getOTP_field
		loop -i 3
			if -getVar "otp" -equal null -then '$getOTPSms' -else {break}
			if -getVar "otp" -equal null -then '$getOTP_field' -else {break}
			
			//if -getVar "otp" -equal null -then 'sleep -t 5000'
			//if -getVar "otp" -equal null -then '$getOTPSms'
			
			wait -text 'recaptcha-reload-button' -timeout 2000 -then {toast -text "Input captcha" -sound true}
			
			wait -text 'recaptcha-reload-button' -timeout 2000 -then {sleep -t 15000}
			
			wait -text 'CONGRATULATION' -exactly true -timeout 2000 -then {break}
			
			if -getVar "otp" -equal null -then '$getOTP_field' -else {break}

			if -getVar "otp" -equal null -then {sleep -t 10000} -else {break}
			
			wait -text 'recaptcha-reload-button' -timeout 2000 -then {toast -text "Input captcha" -sound true}
			
			wait -text 'Send' -exactly true -timeout 5000 -thenClick true
			
		endLoop
		
		if -getVar "otp" -equal null -then {toast -text "OTP not receive" -sound true}
		
		if -getVar "otp" -equal null -then {loopContinue}
		
		loop -i 10
			wait -edittext "6-Digit" -pos 0 -timeout 10000 -thenInput '$getOTPResult' -then {break} -else {csvDataRow -col "status" -setText "notInputPhone"}
			wait -text 'CONGRATULATION' -exactly true -timeout 2000 -then {break}
		endLoop
		
		wait -text 'Confirm' -exactly true -timeout 10000 -thenClick true
		
		wait -text 'CONGRATULATION' -exactly true -timeout 40000 -then {toast -text "success" -sound true}
		
		wait -text 'CONGRATULATION' -exactly true -timeout 4000 -then {csvDataRow -col "status" -setText "success"}
		wait -text 'CONGRATULATION' -exactly true -timeout 5000 -then {csvDataRow -col "phone" -setText "getVar -name newPhone"}
		
	endLoop
	
	toast -text "Ended email. Please add new mail" -sound true
	
endSequence