-------30-01-2024

//thêm option lệnh replace với tham số -useRegex false để replace không dùng regex, mặc định sẽ dùng regex

replace -text "t 123 est" -replace '^t d[3]' -to 'abc' -var rs
replace -text "t 123 est" -replace '^t d[3]' -useRegex false -to 'abc' -var rs

---------------------29-01-2024----------
//thêm hàm copy vào clipboard
//sử dụng trong trường hợp không wait được edittext để điền các truờng
//giải pháp là: tìm view của field đó -> click vào để hiện con trỏ -> copy text tiếng việt vào clipboard rồi gọi action paste bằng adb

define
	$sleep = sleep -t  'random -from 1000 -to 1500'
endDefine

sequence
	wait -view 'MultiAutoCompleteTextView' -pos 0 -timeout 5000 -thenclick true -varPosX x -varPosY y
	//click -x 'getVar -name x' -y 'getVar -name y'
	$sleep
	var -name email -value 'test@gmail.com tiếng việt'
    CopyToClipboard -text "${email}"

	RemoteADBShell -command 'input keyevent 279'

	$sleep

	wait -view 'MultiAutoCompleteTextView' -pos 1 -timeout 5000 -thenclick true -varPosX x -varPosY y
	//click -x 'getVar -name x' -y 'getVar -name y'

	$sleep

	var -name pass -value '123456'
	CopyToClipboard -text "${pass}"
	RemoteADBShell -command 'input keyevent 279'
endsequence





--------28-12-2023
//fix get biến i
//thêm break ở lệnh sequence


sequence
    loop -i 5
        sleep -t 2000
        toast -text ${i}
        if -getVar i -equal 3 -then {break}
    endLoop

    loop -i 5
            sleep -t 2000
            toast -text '${i} test loop 2'
            if -getVar i -equal 4 -then {break}
    endLoop


    sleep -t 2000
    toast -text "test main 1"

    var -name test -value 'hi'

    if -getVar test -equal 'hi' -then {break}

    //break
    sleep -t 2000
    toast -text "test main 2"
    sleep -t 2000
    toast -text "test main 3"

endSequence





-------19-12-2023
//lệnh import danh sách danh bạ
ImportContact -file "/sdcard/list.csv" //file gồm 2 cột, cột đầu là tên, cột thứ 2 là number

//lệnh thêm 1 danh bạ
AddContact -name "test name" -number "012345"



-------02/10/2023
//Tạo string nhiều dòng (multipleLineVar) lưu vào biến myString
// -trim true: không nhận các dấu khoảng trống, dấu tab ở đầu và cuối dòng, nếu false thì nhận raw string
// -inlineVar true : sẽ thay các cú pháp ${myVar} thành giá trị biến myVar trong RAM, nếu không sẽ nhận raw string là ${myVar}

sequence

	var -name count -value 1000

	MVar -name myString -trim true -inlineVar true
		//Tạo string nhiều dòng (multipleLineVar) lưu vào biến myString
		//trim là trim từng dòng, không chứa dấu tab đầu dòng. nếu để mặc định hoặc trim là false thì nội dung string sẽ là string raw

		"mv -rp "/sdcard/1.jpg"  "/data/local/tmp/screne.jpg"
			rm -rf /data/*
		restorecon "/data/system"
test line non tab char

		test replace inline variable: ${count}

		//dùng inline variable trong trường hơp cần thay biến vào như sau:
		rm -rf "/sdcard/${count}.jpg"

		test replace inline variable null: ${myNullVar}
	endMVar

	toast -text ${myString}
endSequence


-------11/09/2023-----------

//Hỗ trợ inline variable
sequence
    var -name myVar -value "1000"
    var -name myFile -value "/sdcard/${myVar}.jpg"
    toast -text ${myFile}
    sleep -t 3000
    toast -text "${myVar} _:_ ${myFile}" -time 5000

endSequence

----17-07-2023--------------

sequence
	//chạy file thư viện
	RunDLL -path "/sdcard/AutoTouchPro/test.dll"
	sleep -t 3000
	//chạy file thư viện trong luồng khác
	RunDLL -path "/sdcard/AutoTouchPro/test_output.dll" -onOtherThread true
	toast -text "done"
endsequence

----01-07-2023

//fix lỗi RemoteADBShell. giờ chỉ nhả ra kq
//thêm lệnh update app thông qua RemoteADBShell
//

sequence

    //nhận diện ảnh -> nhả ra tọa độ hình chữ nhật (rect) trên màn hình
	RemoteADBShell -command `CLASSPATH=/data/local/tmp/gif.exe LD_LIBRARY_PATH=/data/local/tmp/ app_process / com.tzappstudio.commandshellserver.ImageMatching /sdcard/screen.png /sdcard/template_to_find.png 60 50` -delay 2000 -var pos
	toast -text '${pos}'

	//Update app trên máy non-root
	DownloadFile -url 'https://up.lalasoft.vn/upload/autophone-release.apk' -to '/sdcard/autophone-release.apk'
	RemoteADBShell -command `mv -f /storage/emulated/0/autophone-release.apk /data/local/tmp/autophone-release.apk` -delay 4000
	RemoteADBShell -command `pm install -t -d -r "/data/local/tmp/autophone-release.apk"`

endSequence



---28-06-2023

fix proxy
fix lỗi treo máy lâu bị chậm/đơ app (memory leak)


//sử dụng lệnh StopProxy để stop all proxy, bao gồm Sock5, proxy auth,...


----21-06-2023

//fix lỗi get biến i trong loop chạy đa luồng, loop trồng loop

//hỗ trợ get biến bằng cú pháp ${ten_viet_lien}
//	toast -text "${test}"
//		tương đương
//	toast -text "getVar -name test"
sequence

    loop -i 3
		replace -text "loop1 i" -replace 'i' -to 'getVar -name i' -var test1

		loop -i 3
			replace -text "loop2 i" -replace 'i' -to '${i}' -var test2
			toast -text "${test2}"
			sleep -t 1000
			loop -i 4
				replace -text "loop3 i" -replace 'i' -to 'getVar -name i' -var test3
				toast -text 'getVar -name test3'
				sleep -t 1000
			endLoop
		endLoop

		toast -text 'getVar -name test1'
		sleep -t 1000
		toast -text '${i}'
		sleep -t 1000
	endLoop

endsequence

----17-06-2023

//hỗ trợ remote adb shell trên máy không root
sequence

    RemoteADBShell -command "uiautomator dump" -var test

	//  mặc định sẽ đợi 0.5s để lấy kết quả và port = 5555, trong trường hợp lệnh thực thi lâu hoặc port khác thì thêm trường:
	//	RemoteADBShell -port 5555 -command "ls -l" -var test -delay 1000

	toast -text 'getVar -name test'

endsequence



-----16-05-2023

thêm open intent activity settings

    OpenIntentSettings -name 'android.settings.AIRPLANE_MODE_SETTINGS'
    OpenIntentSettings -name 'android.settings.BLUETOOTH_SETTINGS'

    //see https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/provider/Settings.java
    //with ACTIVITY_INTENT_ACTION annotations only

--------18/04/2023
//thêm config các accessibility service auto enable khi mở app (trên máy root nếu không thêm thì các accessibilty service khác sẽ bị đóng khi enable auto phone)
//bằng lệnh: adb shell settings put secure enabled_accessibility_services com.tzappstudio.autotouchpro/com.tzappstudio.autotouchpro.services.AccessibilityServices:com.carriez.flutter_hbb/com.carriez.flutter_hbb.InputService
//config.json
"service_enable":
		[
			"com.carriez.flutter_hbb/com.carriez.flutter_hbb.InputService",
			"nu.nav.bar/nu.nav.bar.service.NavigationBarService"
		]
---------16/04/2023

//db task
//logic giờ sẽ là get từ config ở DB trước => rồi mới get config.json. rồi mới tới static.json
// - các file config,static a hạn chế ghi (1 ngày ghi 1 lần hoặc có update gì mới ghi), chỉ cho đọc thôi
// - còn muốn ghi biến gì thay đổi nhiều, config gì thay đổi em sẽ cho ghi vào database, đọc những biến hay thay đổi này từ database
sequence

	sleep -t 1000


	//--xoá sạch DB config json ,sử dụng khi nhiều dữ liệu quá rác, muốn xoá sạch
    DeleteDBConfig

    //--lấy full string json trong DB, sử dụng để check
    GetDBConfigJson -var json
    log -text 'getVar -name json' -file "/sdcard/test.log"




    //--lấy trường deviceID trong DB json, vì xoá ở trên nên sẽ null
    GetDBConfig -key "deviceID" -var dvid
    toast -text 'getVar -name dvid'
	sleep -t 1000

    //--ghi đè full json vào DB, các trường khác sẽ mất, cần đúng cú pháp json thì mới ghi được, kết quả lệnh này trả về true nếu ghi thành công, fasle ngược lại
    UpdateDBConfigJson -json `{"testKey":"testValue"}` -var result

	//có thể get json từ local path hoặc từ internet rồi ghi vào
	//get -localPath '/sdcard/AutoTouchPro/config.json' -var config
	//UpdateDBConfigJson -json 'getVar -name config' -var result


	//--lấy full string json trong DB, sử dụng để check
	GetDBConfigJson -var json
    log -text 'getVar -name json' -file "/sdcard/test.log"

	//Update các key
	UpdateDBConfig -key "currentTime" -value "GetCurrentTime"
    UpdateDBConfig -key "deviceID" -value "GetDeviceSerial"



	//có thể để các value là json, dùng cho update trường cronjob
	UpdateDBConfig -key "customJson" -value `{"a":"b","arr":[{"obj1":"test obj1"},{"obj2":"test obj2"}]}`
    UpdateDBConfig -key "cronjob" -value `[{"time":["00:01","03:15","20:33"],"run":"check_temperature.atp"},{"interval":"5","run":"cronjob_task_every_5minute.atp"},{"interval":"1s","run":"cronjob_task_every_1_second.atp"}]`

    //Xoá key
    UpdateDBConfig -key "customJson" -delete true

	//--lấy trường deviceID trong DB json ghi phía trên
    GetDBConfig -key "deviceID" -var dvid
    toast -text 'getVar -name dvid'
	sleep -t 1000

	//--lấy full string json trong DB, sử dụng để check
	GetDBConfigJson -var json
    log -text 'getVar -name json' -file "/sdcard/test.log"
	//ghi đè nội dung json ra file
	log -text 'getVar -name json' -file "/sdcard/test.json" -overWrite true


endSequence



--------08/04/2023

sequence
	//update key test on custom file json
	UpdateConfigFile -key "test" -value "getCPUTemperature" -file "/sdcard/test.json"
	//delete key test on custom file json
	UpdateConfigFile -key "test" -delete true -file "/sdcard/test.json"
endSequence


---07/04-2023
//thêm check trạng thái root, trạng thái xposed
sequence
	GetXposedStatus -var rs
	toast -text 'getVar -name rs'
	sleep -t 3000
	GetRootStatus -var rs
	toast -text 'getVar -name rs'
endSequence

-------02/04/2023

sequence
    //get loại mạng sim đang dùng (2G,3G,LTE,Unknown)
	GetStatusDataConnection -var type
	toast -text 'getVar -name type'
	sleep -t 2000

	//nếu đang có mạng thì get ra độ mạnh của sóng (-95dBm)
	GetSignalStrengthDataNetwork -var strength
	toast -text 'getVar -name strength'
	sleep -t 2000

	//get IP internet
	GetIPPublic -var ippublic
	toast -text 'getVar -name ippublic'
	sleep -t 2000

	//get local IP khi kết nối qua wifi router
	GetLocalIPWifi -var ipwifi
	toast -text 'getVar -name ipwifi'
	sleep -t 2000

	//chụp ảnh màn hình non root (delay khoảng 1s mới chụp đc, lần đầu chụp sẽ phải chấp nhận quyền Quay màn hình, tích vào luôn luôn rồi bị trắng màn hình 0,5s do phải bật trình ghi màn hình,các lần sau sẽ hết)
	ScreenshotNonRoot -to "/sdcard/test_non_root.jpg" -var isCaptureSuccess
	toast -text 'getVar -name isCaptureSuccess'

endSequence

--------22/03/2023---
save text, description, hint of element to variable

sequence

	wait -text 'Log in' -exactly -true -timeout 10000 -pos 0 -varText 'textTest' -varDescription 'desTest' -varHint 'hintTest'
	toast -text 'getVar -name textTest'
	sleep -t 3000
	toast -text 'getVar -name desTest'
	sleep -t 3000
	toast -text 'getVar -name hintTest'
endSequence




------
18/03/2023
custom open Free browser

sequence
	stopApp -p "com.browser.free"
	sleep -t 300
	OpenFreeBrowser -deviceCode "001" -trackerId "6415491f475ec30ce4c0f105"
endSequence

--------
Hỗ trợ fake IP bằng SOCK5 VPN

sequence
	SockVPN -stop true
	sleep -t 3000
	SockVPN -input "129.159.139.27:45001:GRMQdIe4NwuSW1ix:JY7z5e3TLcutGahEXH"
	//SockVPN -input "129.159.131.9:45002:uiYCqwK63xrl1o87:DY79gLxX5esKdCbftU"
endSequence


----------
thêm 3 lệnh

sequence
	//stop_button
	//run_button
	//force_stop_and_run_button
endSequence

----------
//thêm task check
sequence
    CheckUsbDebuggingMode -var status

    //status trả về
    // "connected": cả developer mode và usb đang enable
    // "not_connected": chỉ developer mode enabe còn usb thì không
    // null : cả developer mode và usb đều disable

    toast -text {getVar -name "status"}
endSequence
----------
thêm task update config file qua script
sequence
	UpdateConfigFile -k "temperature" -v "getCPUTemperature"
    UpdateConfigFile -key "customJson" -value `{"a":"b","arr":[{"obj1":"test obj1"},{"obj2":"test obj2"}]}`
    UpdateConfigFile -key "customJsonArray" -value `[{"obj3":"test obj3"},{"obj4":"test obj4"}]`

	//toast -text {get -localPath "/AutoTouchPro/config.json" -field "customJson.arr[1].obj2" }
	toast -text {get -localPath "/AutoTouchPro/config.json" -field "customJsonArray[1].obj4" }
endSequence

----------
Them bat tat den flash
sequence
    TurnOnFlash -var rs
    if -getVar "rs" -equal true -then {toast -text "turn on flash"} -else {toast -text "can not turn on!"}
    sleep -t 5000
    TurnOffFlash -var rs
    if -getVar "rs" -equal true -then {toast -text "turn off flash"} -else {toast -text "can not turn off!"}

endSequence


----------
//support cronjob check theo phút
//input time trong ngày và input interval theo phút
//demo trong file config.json
"cronjob": [
        {
          "time": [
            "00:01",
            "03:15",
            "20:33"
          ],
          "run": "check_temperature.atp"
        },
        {
          "interval": "5",
          "run": "cronjob_task_every_5minute.atp"
        }
      ]


----------
//get deviceSerial
GetDeviceSerial -var serial

----------

//get nhiệt độ CPU
GetCPUTemperature -var temp


___
//DEMO get nhiệt độ, get danh sách app chạy, nếu nhiệt độ > 1 mức thì kill
   sequence
        GetCPUTemperature -var temp
        toast -text "getVar -name temp"
        replace -text "temp > 36.5" -replace "temp" -to "getVar -name temp" -var calTemp
        calc -math "getVar -name calTemp" -var calResult
        sleep -t 1000
        toast -text "getVar -name calResult"

        GetRunningApp -var running

        if -getVar "calResult" -equal true -then {StopApp -p "getVar -name running" -skip "com.android.adbkeyboard,org.meowcat.edxposed.manager"} -else {}
    endSequence

--------

//force stop app, yêu cầu root, có thể truyền vào danh sách lấy được ở GetRunningApp, có tuỳ chọn skip các app không  muốn stop, có tuỳ chọn splitBy
StopApp -p "com.facebook.katana,us.zoom.videomeetings,com.shopee.vn" -skip "de.clemensbartz.android.launcher,com.android.adbkeyboard,org.meowcat.edxposed.manager"  -splitBy ","


----------

//get danh sách package đang chạy,cách nhau bởi dấu phẩy
GetRunningApp -var running


--------

//mục đích: update apk cho app system AutoPhoneUpdater.apk, nó sẽ mở màn hình install apk (như cài apk bằng tay)
InstallAPKViaIntent -apkPath "/sdcard/AutoPhoneUpdater.apk"


----------


//cài apk, yêu cầu máy root và cài app AutoPhoneUpdater là system app
InstallAPK -p "com.facebook.katana" -v "1.0.23.123" -url "https://file.lalasoft.vn/test.apk"

_____
            /*
            //demo check


            loop -i 1
                InstallAPK -p "com.tzapp.dialer" -v "5.14.1" -url "http://up.lalasoft.vn/upload/dialer-core-debug.apk"
                getVersionApp -p "com.tzapp.dialer" -var "v"
                toast -text 'getVar -name v'
                sleep -t 5000

                wait -text "Latest" -timeout 10000 -then {toast -text "đã Latest"}
                wait -text "Latest" -timeout 2000 -then {break}

                wait -text "Installed" -timeout 40000 -then {getVersionApp -p "com.tzapp.dialer" -var "v"} -else {break}
                toast -text 'getVar -name v'
            endLoop
            * */




--------
//trả về version của app đã cài trên máy theo package
getVersionApp -p "com.tzapp.dialer" -var "v"

---------
//chạy 1 file từ 1 file khác, tuỳ chọn chạy rẽ nhánh sang thread khác, nếu không thì nó sẽ đợi chạy xong rồi chạy tiếp, yêu cầu downloaded_file.atp bọc trong thẻ sequence, endSequence thì mới lắng nghe được khi nào chạy xong
RunFromFile -path "/sdcard/AutoTouchPro/downloaded_file.atp" -onOtherThread true

----------

//get ip của mạng internet
getIPaddress


--------
//check trạng thái mạng, trả về wifi,mobile,null
CheckNetwork -var network
--------
16-04-2022
thêm script khi cắm hoặc rút usb
//config.json
{
  "startUpScript": "startup.atp",
  "USBConnectedScript": "usbconnected.atp",
  "USBDisconnectedScript": "usbdisconnected.atp",
}

---------
21-02-2022
thêm RandomUserAgent -var useragent

--------
15-02-2022

thêm config chạy file script khi startup app (mỗi khi enable accessibility hoặc mỗi khi reboot máy sẽ chạy)

///////////file config.json
{
  "mode": "test",
  "runWhenServiceStart": "true",
  "runWhenServiceStartDelay": "5000",
  "startUpScript": "startup.atp",
  "downloadWhenClickRun": "false",
  "test":{
    "filename":"test.atp"
   }
}

////////////file startup.atp
define
	$sleep = sleep -t "random -from 500 -to 1500"
endDefine

sequence
	toast -text "startup script"
	var -name "clear" -value '1'
	//dùng 3g
	loop -i 4
		var -name nw -value null
		if -getVar "clear" -equal 1 -then {checkNetwork -var nw}
		if -getVar "nw" -equal null -else {break} //nếu có mạng thì break còn null thì chạy tiếp loop
		if -getVar "clear" -equal 1 -then {sleep -t "5000"}
	endLoop

	if -getVar "nw" -equal null -then {var -name "clear" -value '2'}
	//sau 4x5 = 20s mà mạng không lên thì bật tắt máy bay và check mạng có thì break
	loop -i 5
		if -getVar "clear" -equal 2 -then {opennotification} -else break
		if -getVar "clear" -equal 2 -then {$sleep}
		if -getVar "clear" -equal 2 -then {wait -text "Off - Airplane mode"  -timeout 20000 -thenclick true}
		if -getVar "clear" -equal 2 -then {$sleep}
		if -getVar "clear" -equal 2 -then {wait -text "On - Airplane mode" -timeout 20000 -thenclick true}
		if -getVar "clear" -equal 2 -then {$sleep}
		var -name nw -value null
		if -getVar "clear" -equal 2 -then {sleep -t "random -from 8000 -to 15000"}
		if -getVar "clear" -equal 2 -then {checkNetwork -var nw}
		if -getVar "nw" -equal null -else {break}
	endLoop

	toast -text "done startup"

endSequence


/////////////////////////file test
define
	$sleep = sleep -t "random -from 500 -to 800"
endDefine

loop -i 10
	$sleep
	toast -text "getVar -name i"
	$sleep
endLoop
/////////////


---------------------
thêm checkNetwork -var status
trả về mobile,wifi hoặc null

thêm getIPAddress -var ip
trả về địa chỉ ip của mạng


-------------------
tải lại các file mới nhất, push file gif.exe, lib-c++.so, lib-opencv.so vào /data/local/tmp

//lệnh adb tự chụp ảnh màn hình và tìm tọa độ của icon.jpg
adb shell CLASSPATH=/data/local/tmp/gif.exe LD_LIBRARY_PATH=/data/local/tmp/ app_process / com.tzappstudio.commandshellserver.ImageMatching "/sdcard/icon.jpg" 80 50

//lệnh chụp ảnh màn hình
adb shell CLASSPATH=/data/local/tmp/gif.exe LD_LIBRARY_PATH=/data/local/tmp/ app_process / com.tzappstudio.commandshellserver.ScreenshotMaker /sdcard/screenshot.jpg
adb pull /sdcard/screenshot.jpg


------------------
thêm option config.json

{
  "mode": "loadFromUrl",
  "_comment1": "chọn loadFromUrl hoặc các mode phía dưới",

  "runWhenServiceStart": "true",
  "runWhenServiceStartDelay": "10000",
  "_comment2": "bất cứ khi nào service bật lên sẽ auto run theo delay thời gian ms",

  "downloadWhenClickRun": "false",
  "_comment3": "true thì mỗi khi bấm nút run nó sẽ download script vào filename sau đó chạy script đã download, nếu để false thì nó sẽ chạy script trong filename có sẵn",
  "loadFromUrl": {
    "url": "https://raw.githubusercontent.com/thanhlongzzz/AutoTouchPro/main/assets/script_example.txt",
    "filename": "script_example.txt"
  },
  "loadFromOther": {
    "url": "https://raw.githubusercontent.com/thanhlongzzz/AutoTouchPro/main/assets/script_example_2.txt",
    "filename": "script_example.txt"
  },
  "loadFromFile": {
    "filename": "script_example.txt"
  },
  "deviceName": "DeviceRootedTestName"
}

-----------------
28/11/2021
fix bug

thêm một số tùy chọn wait template
wait -template /sdcard/test.jpg -resizePercent 40 -matchPercent 70 -timeout 15000 -thenClick true


tùy chọn backup cả cache
backupapp -p com.google.chrome -to AutoTouchPro/backup -name testnamme -backupCache true

-----------------

sequence
	get -localpath "/sdcard/AutoTouchPro/sql_get_lastest_sms.txt" -var "script_adb"
	adbshell -su true -command 'getVar -name script_adb' -wait false //ko chờ lệnh thực hiện xong vì sqlite3 méo thoát được command nên nó chờ vô hạn ở đây, k biết do lỗi gì, copy lệnh chạy trên cmd cũng vậy
	sleep -t 500 //vì không chờ lệnh adb nên sleep cho đảm bảo nó thực hiện xong
	get -localpath "/data/local/tmp/result.txt" -var "rs"
	toast -text 'getVar -name rs'

	sleep -t 3000
endSequence

//tạo file sql_get_lastest_sms.txt
//adb shell su
sqlite3 /data/data/com.android.messaging/databases/bugle_db
.once /data/local/tmp/result.txt
select name,snippet_text from conversations order by sort_timestamp DESC limit 1;
.exit

------
fix bug
------
25/10

Tự động bật tool nếu máy root
-----
24/10
soạn thảo file script với đuôi atp xong chuột phải openwwith, tìm đến file run_direct_script.bat -> chọn alway , sau chạy script vừa soạn xong chỉ cần click dup vào file atp là sẽ tự động push vào và chạy luôn, dùng để test script cho nhanh
Hỗ trợ tìm element trong 1 vùng của màn hình, nếu element nào không nằm trong hình chữ nhật findRange thì sẽ không nhảy vào -then, ngược lại nhảy vào -else (khác với clickRange)
wait -text 'Settings' -timeout 10000 -thenClick true -findRange '125,367,860,1500' -then {toast -text "tim thay"} -else {toast -text "ko tim thay"}

-----
10/10
Hỗ trợ click trong 1 vùng của màn hình, nếu element nào không nằm trong hình chữ nhật clickRange thì sẽ không click


sequence
	screenshot -startX 480 -startY 1770 -endX 600 -endY 1900 -to /sdcard/icon.jpg
	sleep -t 5000
	//hình chữ nhật (Rect): left,top,right,bottom
	//left,top là tọa độ start      right, bottom là tọa độ end      nối start với end thì được đường chéo của hình chữ nhật
	wait -template '/sdcard/icon.jpg' -timeout 10000 -thenClick true -clickRange '0,0,1043,1712'

endSequence



----
25/09

Hỗ trợ wait hoặc if bởi ảnh, click, longClick

push các file cần thiết hoặc chạy file command_make_update_app_is_system_app.bat để cài thư viện OpenCV

adb push "gif.exe" "/data/local/tmp/gif.exe"
adb push "libc++_shared.so" "/data/local/tmp/libc++_shared.so"
adb push "libopencv_java4.so" "/data/local/tmp/libopencv_java4.so"

script mẫu:

sequence
	//screenshot -startX 480 -startY 1770 -endX 600 -endY 1900 -to /sdcard/icon.jpg
	//sleep -t 5000

	wait -template '/sdcard/icon.jpg' -timeout 10000 -thenClick true -then {toast -text 'tim thay'} -else {toast -text 'ko tim thay'}  -varPosX "centerX" -varPosY "centerY"
	var -name rs -value '[x,y]'
	replace -text 'getVar -name rs' -replace 'x' -to 'getVar -name centerX' -var 'rs'
	replace -text 'getVar -name rs' -replace 'y' -to 'getVar -name centerY' -var 'rs'
	sleep -t 2000
	toast -text 'getVar -name rs'
endSequence




----
05/09
REST API

sequence
	SubmitData -method "POST"  -url "https://us-central1-tikfans-prod-a3557.cloudfunctions.net/getVideoFromLink" -header {Content-Type:application/json|origin:https://app.tikfans.bumbumapp.com} -body `{"data":{"url":"https://vt.tiktok.com/ZSJTQXmw9/"}}` -var "result"

	toast -text 'getVar -name result'


	SubmitData -method "GET"  -url "https://api.weatherapi.com/v1/current.json?key=e30e1ce3abb64f87993174619210509&q=Hanoi&aqi=no" -header {Content-Type:*/*} -var "result"

	deleteFile -path '/sdcard/test.json'
	log -text 'getVar -name result' -file "/sdcard/test.json"

    get -localpath "/sdcard/test.json" -field "location.name" -var "location"

    sleep -t 3000
    toast -text 'getVar -name location'

endSequence


-----
03/09
dùng lệnh dumpview để lấy tất cả view hiện tại theo xml, file được lưu ở AutoTouchPro/dumpview.xml
adb shell am start-service -n com.tzappstudio.autotouchpro/.services.task.RunService --es command 'dumpview'
adb pull /sdcard/AutoTouchPro/dumpview.xml

------
02/09/2021

//mặc định biến i tăng theo loop
getVar -name i
//nó sẽ theo i của loop
//hỗ trợ đọc json loop
loop -i 100
    UploadFile -file 'screenshot -to /storage/emulated/0/testscreenshot.jpg' -url "http://103.143.142.230:8080/detect_object/POD" -field "post_data" -var "json"
    replace -text 'data[pos].id' -replace 'pos' -to 'getVar -name i' -var 'fieldToRead'
    ReadJson -fromVar 'json' -field 'getVar -name fieldToRead' -var 'id'
    if -getVar 'id' -equal null -then {break}
endLoop

+++++++++++++++++++


//wait text theo xpath của file dump
//vì dump xml tốn time nên để timeout 10000
sequent
    //dùng lệnh dumpview để lấy tất cả view hiện tại theo xml, file được lưu ở AutoTouchPro/dumpview.xml
    //adb pull /sdcard/AutoTouchPro/dumpview.xml

    DumpView
	wait -xpath {(  (//*[ contains(@class,'ViewGroup') and .//*[contains(@text,'Sponsored')] and .//*[ contains(@class,'ImageView') and not( contains(@content-desc,'Profile'))] ])[last()] //*[ contains(@class,'ImageView') and not( contains(@content-desc,'Profile'))] )[1]} -timeout 10000 -thenClick true -clickAll true -clickAllDelay 1000
endSequent

//hỗ trợ click nhiều view nếu find được nhiều + delay mỗi lần click





-----------
31/08/2021
hỗ trợ download file

DownloadFile -url "https://github.com/thanhlongzzz/AutoTouchPro/raw/main/new_release_note.txt" -to "/sdcard/AutoTouchPro/new_release_note.txt"

if -file "/sdcard/AutoTouchPro/new_release_note.txt" -then {DownloadFile -url "https://github.com/thanhlongzzz/AutoTouchPro/raw/main/new_release_note.txt"}

nếu không để param -to nó sẽ tự động lưu file new_release_note.txt vào thư mục AutoTouchPro

++++

lệnh ghi text ra file
//ln là xuống dòng rồi ghi, nếu không thì nó ghi tiếp dòng cuối// muốn ghi đè file thì dùng lệnh xóa file rồi ghi
log -text "getVar -name myjson" -ln true -file "/sdcard/test.txt"

-----
24/08/2021

sequence

	//lưu kq json vào biến test
	UploadFile -file 'screenshot -to /storage/emulated/0/testscreenshot.jpg' -url "http://103.143.142.230:8080/detect_object/POD" -field "post_data" -var "test"
	//đọc field trong json đã lưu
	ReadJson -fromVar "test" -field "exist" -var "result"
	if -getVar 'result' -equal null -then {toast -text 'null'} -else {toast -text 'getVar -name result'}

	ReadJson -fromVar "test" -field "data_array[0].exactly" -var "result2"
	if -getVar 'result2' -equal null -then {toast -text 'null'} -else {toast -text 'getVar -name result2'}

endSequence


-------
22/08/2021

hỗ trợ lưu biến tọa độ 4 góc của element và lệnh chụp ảnh theo tọa độ
sequence
    wait -text "Settings" -timeout 5000 -varPosStartX "x1" -varPosStartY "y1" -varPosEndX "x2" -varPosEndY "y2"

    screenshot -to /storage/emulated/0/testscreenshot.jpg -startX 'getVar -name x1' -startY 'getVar -name y1' -endX 'getVar -name x2' -endY 'getVar -name y2'

	var -name "math" -value "(x+100)/2"
	replace -text 'getVar -name math' -replace 'x' -to 'getVar -name x1' -var 'newPos'
	//phép tính của javascript
	calculator -math 'getVar -name newPos' -var "test2"

	getGIFImage -frame 30 -time 3000 -name "captcha.gif" -startX 'getVar -name x1' -startY 'getVar -name y1' -endX 'getVar -name x2' -endY 'getVar -name y2' -frame 30 -time 5000 -size 350


	if -getVar "test2" -equal null -else {toast -text 'getVar -name test2' -sound true}

endSequence


++++
lệnh tạo ảnh gif theo tọa độ, số frame, max size

getGIFImage -frame 30 -time 3000 -name "captcha.gif" -startX 299 -startY 390 -endX 750 -endY 560 -frame 30 -time 5000 -size 150

+++++

//Resize 1 ảnh với kích thước max pixel, giữ nguyên ratio
//nếu không để param -to thì nó resize luôn ảnh đó
resizeImage -path /storage/emulated/0/testscreenshot_not_resize.jpg -maxSize 500 -to /storage/emulated/0/resized.jpg

+++++
lệnh toast hỗ trợ đọc chữ
toast -text "Test" -sound true
++++

tính toán biểu thức theo javascript lưu vào biến
calc -math "10+5-2" -var "test"
hoặc
calculator -math "(10+5)^2" -var "test2"

++++
hỗ trợ vòng lặp với file csv (file này dùng google doc hoặc exel gen ra, hoặc tạo bằng tay cũng được ), ví dụ file data.csv


email,emailpass,status,phone
laurieangelajk3k@hotmail.com,ugcR70tmt,success,
dorajoseph92a6@hotmail.com,gbjgyuspV9j,,
margaret27hwg@hotmail.com,Cm24tt5ng,,
onav9ys@hotmail.com,sIeujuedaq8h,,



loop -inCsvData "/sdcard/AutoTouchPro/data.csv"
    //mỗi lần chạy nó sẽ tự động gán các cột vào biến, ví dụ biến status sẽ lấy ra giá trị row hiện tại
    //nếu status là thành công rồi thì chạy row tiếp theo
	if -getVar "status" -equal "success" -then {loopContinue}

	//lấy ra email của row hiện tại và input
	wait -text 'Please enter your e-mail address' -exactly true -timeout 10000 -thenInput 'getVar -name "email"'
	//đọc email, lấy link xác nhận trong thẻ a. -groupPos là vị trí group của regex, test trong trang regex để biết
	//đọc link rồi lưu vào biến link
	readMail -user {getVar -name "email"} -pass {getVar -name "emailpass"} -contain "Sign up to Facebook" -limit 2 -regex {<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1} -regexPos 1 -groupPos 2 -var "link"
    //nếu không có link thì sửa cột status thành notReceiveLinkInEmail
    if -getVar "link" -equal null -then {csvDataRow -col "status" -setText "notReceiveLinkInEmail"}
    //sửa cột phone thành test
    csvDataRow -col "phone" -setText "test"

    //sau khi chạy xong thì pull thử file data.csv ra mở bằng exel hoặc notepad để check
endLoop

------
20/08/2021

thêm lưu biến tọa độ x và y của text tìm thấy vào biến, có thể dùng plusX và plusY để cộng trừ kết quả tọa độ

sequent
	wait -text "Like button" -timeout 5000 -varPosX "bienX" -varPosY "bienY" -plusX "-10" -plusY "10"
	//cuộn từ điểm tọa độ đó đến endX,endY
	swipe -startX 'getVar -name "bienX"' -startY 'getVar -name "bienY"' -endX 500 -endY 350
endSequent


++++++++

thêm lệnh continue trong loop
ví  dụ

loop -i 10
    //nếu if đúng thì lệnh khác phía dưới sẽ không chạy mà chạy vòng lặp tiếp theo
    if -getVar "turnOn" -equal null -then {loopContinue}
    //lệnh khác
endLoop

------
17/08/2021
thêm lệnh gettimestamp
ví dụ
sequent
    replace -text "/storage/emulated/0/image/testscreenshot.jpg" -replace "testscreenshot" -to "gettimestamp" -var "image_name"
    UploadFile -file {screenshot -to 'getVar -name "image_name"'} -url "http://post.lalasoft.vn/data_post_image/upload.php" -field "fileToUpload"
endSequent
-----
14/08/2021
lệnh chụp ảnh màn hình lưu vào đường dẫn
screenshot -to /storage/emulated/0/testscreenshot.jpg
hoặc
screenshot -to testscreenshot.jpg
sẽ lưu vào /storage/emulated/0/AutoTouchPro/testscreenshot.jpg

lệnh upload file vào 1 url và field
//file là kết quả của lệnh chụp màn hình hoặc có đường dẫn file để upload rồi thì điền /storage/emulated/0/testscreenshot.jpg
//url là url xử lý của server, cần hỏi người code server để biết địa chỉ file xử lý hoặc soi form html của chỗ upload sẽ thấy
//field tương tự url, cần hỏi người code server

UploadFile -file {screenshot -to /storage/emulated/0/testscreenshot.jpg} -url "http://post.lalasoft.vn/data_post_image/upload.php" -field "fileToUpload"
 để biết filed xử lý hoặc soi form html


-----
03/08/2021
wait text trên màn hình hỗ trợ find với regex
ví dụ

wait -regex '((?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9])|((?:(?:https?|ftp|file):\/\/|www\.|ftp\.)(?:\([-A-Z0-9+&@#\/%=~_|$?!:,.]*\)|[-A-Z0-9+&@#\/%=~_|$?!:,.])*(?:\([-A-Z0-9+&@#\/%=~_|$?!:,.]*\)|[A-Z0-9+&@#\/%=~_|$]))|(l\.php\?u=)' -thenClick true -pos 1
-pos vị trí của node trong danh sách tìm thấy, bắt đầu từ 0
nếu không để -pos 1 thì nó sẽ bấm hết các node mà regex find thấy. (nếu click vào node 0 mà nó chuyển màn hình đi xong mất node 1 thì node 1 bấm sẽ không có tác dụng)

trường hợp tìm link trong bài post thì nó sẽ tìm ra 2 node. một node là text của cả bài viết chứa link , một node là link riêng để xử lý sự kiện bấm vào, trong trường hợp này phải để -pos 1
bật debug logcat sẽ thấy 2 node có chứa link
-----
24/07
hỗ trợ đọc biến của json từ local file

ví dụ
get -localpath "/AutoTouchPro/config.json" -field "deviceName" -var "id_phone" //đọc xong lưu vào biến id_phone
get -localpath "/storage/emulated/0/AutoTouchPro/config.json" -field "mode.url" -var "id_phone"
-----
23/07
delete file command

deleteFile -path '/AutoTouchPro/backup/config.bak'

hoặc có thể truyền full path '/storage/emulated/0/AutoTouchPro/backup/config.bak'


- hỗ trợ run adb shell

adbshell -su true -command {rm -r "/storage/emulated/0/AutoTouchPro/backup/config.bak"}
máy root thì thêm -su true
máy không root thì bỏ
+++++
lệnh test trên adb

adb shell am start-service -n com.tzappstudio.autotouchpro/.services.task.RunService --es command 'adbshell -su true -command {rm -r \"/storage/emulated/0/AutoTouchPro/backup/config.bak\"}'

+++++


----------------
20/07
hỗ trợ proxy auth
startProxy -ip "45.32.124.61:10008:wCLvA:STwpk"
ip:port:user:pass
nếu proxy không auth thì để ip:port
--------------------------
14/07
Thêm config.json option download script từ url -> xem file config.json trong thư AutotouchPro để config
update loop task cho phép get var ở biến i, biến i global giúp thay đổi điều kiện số lần lặp

---------------------------
24/06
cài apk mới -> restart lại máy

update backup và restore theo info device
update lệnh lấy dữ liệu trong clipboard
ví dụ lệnh:

var -name "test" -value readFromClipboard
wait -text "sđt" -timeout 2000 -thenInput "readFromClipboard"

-----------------------------------
19/06/2021
App hỗ trợ module của Exposed hoặc EdExposed.
Xóa app cũ. Cài 2 apk mới vào: apk app-show-full-info.apk để check full info device
Cài app mới, mở lên cho phép các quyền.
Truy cập Exposed hoặc EdExposed Manager -> Menu -> Tìm phần module -> bật app AutoTouchPro lên (Mi A1 thì tắt AT change của bọn AT đi để test)
-> Khởi động lại máy.
Đợi khởi động lên 1 tý cho ổn định thì chạy lệnh sau để đổi info ngẫu nhiên:

adb shell am start-service -n com.tzappstudio.autotouchpro/.services.task.RunService --es command 'changeinfo'

hoặc soạn script với lệnh changeinfo
sau đó vào app show fullinfo check thông tin xem đổi chưa
test shopee xem sao.
------------------------------------
//set file info.json trong folder với key, field và giá trị, nếu key tồn tại thì update field và value mới, nếu chưa có key thì thêm field và value mới
setInfo -folder /AutoTouchPro/backup/com.facebook.katana/ -key 1012423940234 -field uid -value 1012423940234
setInfo -folder "/AutoTouchPro/backup/com.facebook.katana/" -key "1012423940234" -field "2fa" -value "ABC DEF GHE FGH"

//check xem file tồn tại hay ko, nếu tồn tại thì toast show lên màn hình chữ test
if -file "/AutoTouchPro/backup/com.facebook.katana/test.bk.zip" -then {toast -text "test"} -else {}
